resource url?
QUESTION ----------------
A number is considered to be ugly if its only prime factors are 2, 3 or 5.
------------------ANSWER
def checkUgly(n):
    if(n==0):
        return "not ugly"
    for i in [2,3,5]:
        while(n%i==0):
            n//=i
    if(n==1):
        return "ugly"
    else:
        return "not ugly"
------------------------------
QUESTION ----------------
An e-commerce company plans to give their customers a special discount for Christmas.
------------------ANSWER
def christmasDiscount(n):
    
    dis=0
    for i in range (len(str(n))):
        t=n%10
        flag=0
        for i in range (2,(t//2)+1):
            if(t%i==0):
                flag+=1
                break
        if(flag==0):
            dis+=t
        n//=10
    return dis
------------------------------
QUESTION ----------------
Given a number with maximum of 100 digits as input, find the difference between the sum
------------------ANSWER
def differenceSum(n):
    number_str = str(number)
    sum_even = 0
    sum_odd = 0
    for i, digit in enumerate(number_str):
        if (i + 1) % 2 == 0:
            sum_even += int(digit)
        else:
            sum_odd += int(digit)
    return abs(sum_even - sum_odd)
number = 123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
difference = differenceSum(number)
------------------------------
QUESTION ----------------
An abundant number is a number for which the sum of its proper divisors is greater than
------------------ANSWER
def abundant(n):
    sum1=0
    for i in range(1,(n//2)+1):
        if(n%i==0):
            sum1+=i
    if(sum1>n):
        return "Yes"
    else:
        return "No"
------------------------------
QUESTION ----------------
An automorphic number is a number whose square ends with the number itself.
------------------ANSWER
def automorphic(n):
    if n <= 0:
        return "Invalid input"
    square = n * n
    if str(square).endswith(str(n)):
        return "Automorphic"
    else:
        return "Not Automorphic"
------------------------------
